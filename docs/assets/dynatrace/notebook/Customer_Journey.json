{
    "version": "7",
    "defaultTimeframe": {
        "from": "now()-2h",
        "to": "now()"
    },
    "defaultSegments": [],
    "sections": [
        {
            "id": "c0a6ca1e-f82e-4c3d-b7bf-ce1ccf9af64b",
            "type": "markdown",
            "markdown": "## Agentless Real User Monitoring\n\n### Company Name\n```\nDEM Strike\n```\n\n### Website URL\n```\nhttps://www.demstrike-playground.com/*\n```\n\n### RUM Application Name\n```\nDEM Strike customer journey\n```\n\n### Code Snippet\n```\n```\n\n### Source URL\n```\nPaste your script source url here\n```"
        },
        {
            "id": "9a8fd723-e229-446f-8386-99da5dc3a0fd",
            "type": "markdown",
            "markdown": "## Customer Journey\n\n### Journey Name\n```\nDEM Strike Purchase Journey\n```\n\n### Step 1\n```\nProduct Page\n```\n\n### Step 2\n```\nAdd to Cart\n```\n\n### Step 3\n```\nCart Page\n```\n\n### Step 4\n```\nCheckout Page\n```\n\n### Step 5\n```\nOrder Received\n```"
        },
        {
            "id": "4efb8710-94a5-4566-b3de-1c4d20186752",
            "type": "markdown",
            "markdown": "### BizEvent Template\n```\nlet attributes = {\n    \"event.provider\": \"event-source\",\n    \"event.category\": \"customer-journey-name\",\n    \"event.name\": \"step-name\",\n    \"page\": \"page-name\",\n    \"custom-property-name-1\": \"value\",\n    \"custom-propery-name-2\": \"value\",\n    \"custom-property-name-3\": \"value\"\n};\n\ndynatrace.sendBizEvent('customer-journey-name.step-name', attributes);\n```"
        },
        {
            "id": "39c3f0c3-1322-4856-8aad-57557ebd2fe7",
            "type": "markdown",
            "markdown": "## Customer Journey BizEvents\nModify the markdown sections below to match your customer journey.  After triggering the BizEvent, modify the DQL section to match your customer journey step BizEvent details."
        },
        {
            "id": "2f5e05ad-da43-4c4a-8c6a-41dfd119c5a5",
            "type": "markdown",
            "markdown": "### Step 1 - Product Page\n```\nlet attributes = {\n  \"event.provider\": \"dem-strike-web\",\n  \"event.category\": \"strike-purchase-journey\",\n  \"event.name\": \"view-product-page\",\n  \"page\": \"product-page\",\n  \"customer.status\": \"logged-in\",\n  \"customer.loyalty.level\": \"gold\",\n  \"product.id\": \"SKU12345\",\n  \"product.name\": \"Wireless Noise-Canceling Headphones\",\n  \"product.category\": \"Audio\",\n  \"product.price\": 248.99,\n  \"product.availability\": \"in-stock\",\n  \"customer.segment\": \"tech-enthusiast\",\n  \"user.unique.id\": \"abc123xyz\"\n};\n\ndynatrace.sendBizEvent('strike-purchase-journey.view-product-page', attributes);\n```"
        },
        {
            "id": "c434760b-4ba2-4fb9-878f-68c9232d5510",
            "type": "dql",
            "filterSegments": [],
            "drilldownPath": [],
            "previousFilterSegments": [],
            "state": {
                "input": {
                    "timeframe": {
                        "from": "now()-2h",
                        "to": "now()"
                    },
                    "value": "fetch bizevents\n| filter event.provider == \"dem-strike-web\"\n| filter event.category == \"strike-purchase-journey\"\n| filter event.type == \"strike-purchase-journey.view-product-page\""
                },
                "visualizationSettings": {
                    "chartSettings": {}
                },
                "querySettings": {
                    "maxResultRecords": 1000,
                    "defaultScanLimitGbytes": 500,
                    "maxResultMegaBytes": 1,
                    "defaultSamplingRatio": 10,
                    "enableSampling": false
                },
                "davis": {
                    "includeLogs": true,
                    "davisVisualization": {
                        "isAvailable": true
                    }
                }
            }
        },
        {
            "id": "c67c59aa-d04e-4ee4-8567-c9baee7f171a",
            "type": "markdown",
            "markdown": "### Step 2 - Add to Cart\n```\nlet attributes = {\n  \"event.provider\": \"dem-strike-web\",\n  \"event.category\": \"strike-purchase-journey\",\n  \"event.name\": \"add-to-cart\",\n  \"page\": \"product-page\",\n  \"customer.status\": \"logged-in\",\n  \"customer.loyalty.level\": \"gold\",\n  \"product.id\": \"SKU12345\",\n  \"product.name\": \"Wireless Noise-Canceling Headphones\",\n  \"product.category\": \"Audio\",\n  \"product.price\": 248.99,\n  \"cart.id\": \"cart789\",\n  \"cart.item.count\": 1,\n  \"customer.segment\": \"tech-enthusiast\",\n  \"user.unique.id\": \"abc123xyz\"\n};\n\ndynatrace.sendBizEvent('strike-purchase-journey.add-to-cart', attributes);\n```"
        },
        {
            "id": "a1a9c798-d662-496d-a875-20db6767aaf7",
            "type": "dql",
            "filterSegments": [],
            "drilldownPath": [],
            "previousFilterSegments": [],
            "state": {
                "input": {
                    "timeframe": {
                        "from": "now()-2h",
                        "to": "now()"
                    },
                    "value": "fetch bizevents\n| filter event.provider == \"dem-strike-web\"\n| filter event.category == \"strike-purchase-journey\"\n| filter event.type == \"strike-purchase-journey.add-to-cart\""
                },
                "visualizationSettings": {
                    "chartSettings": {}
                },
                "querySettings": {
                    "maxResultRecords": 1000,
                    "defaultScanLimitGbytes": 500,
                    "maxResultMegaBytes": 1,
                    "defaultSamplingRatio": 10,
                    "enableSampling": false
                },
                "davis": {
                    "includeLogs": true,
                    "davisVisualization": {
                        "isAvailable": true
                    }
                }
            }
        },
        {
            "id": "51ea7687-e7f1-4e54-aeb8-3c9771fbcd84",
            "type": "markdown",
            "markdown": "### Step 3 - Cart Page\n```\nlet attributes = {\n  \"event.provider\": \"dem-strike-web\",\n  \"event.category\": \"strike-purchase-journey\",\n  \"event.name\": \"cart-page-view\",\n  \"page\": \"cart-page\",\n  \"customer.status\": \"logged-in\",\n  \"customer.loyalty.level\": \"gold\",\n  \"cart.id\": \"cart789\",\n  \"cart.item.count\": 2,\n  \"cart.total.value\": 497.98,\n  \"customer.segment\": \"tech-enthusiast\",\n  \"user.unique.id\": \"abc123xyz\"\n};\n\ndynatrace.sendBizEvent('strike-purchase-journey.cart-page-view', attributes);\n```"
        },
        {
            "id": "123a05a3-7271-4186-8d4f-3cd51468ced5",
            "type": "dql",
            "filterSegments": [],
            "drilldownPath": [],
            "previousFilterSegments": [],
            "state": {
                "input": {
                    "timeframe": {
                        "from": "now()-2h",
                        "to": "now()"
                    },
                    "value": "fetch bizevents\n| filter event.provider == \"dem-strike-web\"\n| filter event.category == \"strike-purchase-journey\"\n| filter event.type == \"strike-purchase-journey.cart-page-view\""
                },
                "visualizationSettings": {
                    "chartSettings": {}
                },
                "querySettings": {
                    "maxResultRecords": 1000,
                    "defaultScanLimitGbytes": 500,
                    "maxResultMegaBytes": 1,
                    "defaultSamplingRatio": 10,
                    "enableSampling": false
                },
                "davis": {
                    "includeLogs": true,
                    "davisVisualization": {
                        "isAvailable": true
                    }
                }
            }
        },
        {
            "id": "42171185-2a8b-487f-890e-81780be64470",
            "type": "markdown",
            "markdown": "### Step 4 - Checkout Page View\n```\nlet attributes = {\n  \"event.provider\": \"dem-strike-web\",\n  \"event.category\": \"strike-purchase-journey\",\n  \"event.name\": \"checkout-page-view\",\n  \"page\": \"checkout-page\",\n  \"customer.status\": \"logged-in\",\n  \"customer.loyalty.level\": \"gold\",\n  \"cart.id\": \"cart789\",\n  \"cart.total.value\": 497.98,\n  \"checkout.step\": \"payment\",\n  \"customer.segment\": \"tech-enthusiast\",\n  \"user.unique.id\": \"abc123xyz\"\n};\n\ndynatrace.sendBizEvent('strike-purchase-journey.checkout-page-view', attributes);\n```"
        },
        {
            "id": "f7399d4a-534e-4ba3-856f-9d43c71dc46c",
            "type": "dql",
            "filterSegments": [],
            "drilldownPath": [],
            "previousFilterSegments": [],
            "state": {
                "input": {
                    "timeframe": {
                        "from": "now()-2h",
                        "to": "now()"
                    },
                    "value": "fetch bizevents\n| filter event.provider == \"dem-strike-web\"\n| filter event.category == \"strike-purchase-journey\"\n| filter event.type == \"strike-purchase-journey.checkout-page-view\""
                },
                "visualizationSettings": {
                    "chartSettings": {}
                },
                "querySettings": {
                    "maxResultRecords": 1000,
                    "defaultScanLimitGbytes": 500,
                    "maxResultMegaBytes": 1,
                    "defaultSamplingRatio": 10,
                    "enableSampling": false
                },
                "davis": {
                    "includeLogs": true,
                    "davisVisualization": {
                        "isAvailable": true
                    }
                }
            }
        },
        {
            "id": "dc0f5b95-5460-4375-85c0-ed5d0d5f8cc8",
            "type": "markdown",
            "markdown": "### Step 5 - Order Received\n```\nlet attributes = {\n  \"event.provider\": \"dem-strike-web\",\n  \"event.category\": \"strike-purchase-journey\",\n  \"event.name\": \"order-received\",\n  \"page\": \"order-confirmation\",\n  \"customer.status\": \"logged-in\",\n  \"customer.loyalty.level\": \"gold\",\n  \"order.id\": \"order456\",\n  \"order.total.value\": 497.98,\n  \"order.item.count\": 2,\n  \"order.payment.method\": \"credit-card\",\n  \"order.shipping.method\": \"standard\",\n  \"customer.segment\": \"tech-enthusiast\",\n  \"user.unique.id\": \"abc123xyz\"\n};\n\ndynatrace.sendBizEvent('strike-purchase-journey.order-received', attributes);\n```"
        },
        {
            "id": "adf53689-a12b-4d0d-9dec-91e3e6264d20",
            "type": "dql",
            "filterSegments": [],
            "drilldownPath": [],
            "previousFilterSegments": [],
            "state": {
                "input": {
                    "timeframe": {
                        "from": "now()-2h",
                        "to": "now()"
                    },
                    "value": "fetch bizevents\n| filter event.provider == \"dem-strike-web\"\n| filter event.category == \"strike-purchase-journey\"\n| filter event.type == \"strike-purchase-journey.order-received\""
                },
                "visualizationSettings": {
                    "chartSettings": {}
                },
                "querySettings": {
                    "maxResultRecords": 1000,
                    "defaultScanLimitGbytes": 500,
                    "maxResultMegaBytes": 1,
                    "defaultSamplingRatio": 10,
                    "enableSampling": false
                },
                "davis": {
                    "includeLogs": true,
                    "davisVisualization": {
                        "isAvailable": true
                    }
                }
            }
        },
        {
            "id": "6af25bbe-7bb3-4293-922b-69b859dabb6c",
            "type": "markdown",
            "markdown": "## Customer Journey: Business Analytics\nUse DQL to query the BizEvents from the customer journey and measure business outcomes!"
        },
        {
            "id": "fa22a508-8822-40a0-82b1-19d835fdec6c",
            "type": "dql",
            "filterSegments": [],
            "drilldownPath": [],
            "previousFilterSegments": [],
            "state": {
                "input": {
                    "timeframe": {
                        "from": "now()-2h",
                        "to": "now()"
                    },
                    "value": "fetch bizevents\n| filter event.provider == \"dem-strike-web\" and event.category == \"strike-purchase-journey\"\n| filter event.name == \"view-product-page\"\n| limit 1\n| join kind: inner, [\n    fetch bizevents\n    | filter event.provider == \"dem-strike-web\" and event.category == \"strike-purchase-journey\"\n    | filter event.name == \"add-to-cart\"\n], on: {user.unique.id}, prefix: \"add-to-cart.\"\n| join kind: inner, [\n    fetch bizevents\n    | filter event.provider == \"dem-strike-web\" and event.category == \"strike-purchase-journey\"\n    | filter event.name == \"cart-page-view\"\n], on: {user.unique.id}, prefix: \"cart-page.\"\n| join kind: inner, [\n    fetch bizevents\n    | filter event.provider == \"dem-strike-web\" and event.category == \"strike-purchase-journey\"\n    | filter event.name == \"checkout-page-view\"\n], on: {user.unique.id}, prefix: \"checkout-page.\"\n| join kind: inner, [\n    fetch bizevents\n    | filter event.provider == \"dem-strike-web\" and event.category == \"strike-purchase-journey\"\n    | filter event.name == \"order-received\"\n], on: {user.unique.id}, prefix: \"order-received.\"\n| fieldsAdd `decision-time-step-2` = if(isNotNull(`add-to-cart.timestamp`),(`add-to-cart.timestamp` - timestamp), else: null)\n| fieldsAdd `decision-time-step-3` = if(isNotNull(`cart-page.timestamp`),(`cart-page.timestamp` - `add-to-cart.timestamp`), else: null)\n| fieldsAdd `decision-time-step-4` = if(isNotNull(`checkout-page.timestamp`),(`checkout-page.timestamp` - `cart-page.timestamp`), else: null)\n| fieldsAdd `decision-time-step-5` = if(isNotNull(`order-received.timestamp`),(`order-received.timestamp` - `checkout-page.timestamp`), else: null)\n| fieldsAdd conversion = if(isNotNull(`order-received.order.id`), true, else: false)\n| fields {\n    journeyStartTime = timestamp,\n    journeyId = user.unique.id,\n    conversion,\n    customerStatus = customer.status,\n    loyaltyLevel = customer.loyalty.level,\n    decisionTimeStep2 = `decision-time-step-2`,\n    decisionTimeStep3 = `decision-time-step-3`,\n    decisionTimeStep4 = `decision-time-step-4`,\n    decisionTimeStep5 = `decision-time-step-5`,\n    productName = product.name,\n    productCategory = product.category,\n    productPrice = product.price,\n    orderTotal = `order-received.order.total.value`\n    \n}"
                },
                "visualizationSettings": {
                    "chartSettings": {}
                },
                "querySettings": {
                    "maxResultRecords": 1000,
                    "defaultScanLimitGbytes": 500,
                    "maxResultMegaBytes": 1,
                    "defaultSamplingRatio": 10,
                    "enableSampling": false
                },
                "davis": {
                    "includeLogs": true,
                    "davisVisualization": {
                        "isAvailable": true
                    }
                }
            }
        }
    ]
}
